<?php

// autoload_namespaces.php @generated by Composer

$vendorDir = dirname(dirname(__FILE__));
$baseDir = dirname($vendorDir);

return array(
    'Widop\\HttpAdapterBundle' => array($vendorDir . '/widop/http-adapter-bundle'),
    'Widop\\HttpAdapter' => array($vendorDir . '/widop/http-adapter/src'),
    'Widop\\GoogleAnalyticsBundle' => array($vendorDir . '/widop/google-analytics-bundle'),
    'Widop\\GoogleAnalytics' => array($vendorDir . '/widop/google-analytics/src'),
    'Whoops' => array($vendorDir . '/filp/whoops/src'),
    'System' => array($vendorDir . '/phpseclib/phpseclib/phpseclib'),
    'Symfony\\Component\\Yaml\\' => array($vendorDir . '/symfony/yaml'),
    'Symfony\\Component\\Translation\\' => array($vendorDir . '/symfony/translation'),
    'Symfony\\Component\\Templating\\' => array($vendorDir . '/symfony/templating'),
    'Symfony\\Component\\Stopwatch\\' => array($vendorDir . '/symfony/stopwatch'),
    'Symfony\\Component\\Security\\Csrf\\' => array($vendorDir . '/symfony/security-csrf'),
    'Symfony\\Component\\Security\\Core\\' => array($vendorDir . '/symfony/security-core'),
    'Symfony\\Component\\Routing\\' => array($vendorDir . '/symfony/routing'),
    'Symfony\\Component\\Process\\' => array($vendorDir . '/symfony/process'),
    'Symfony\\Component\\HttpKernel\\' => array($vendorDir . '/symfony/http-kernel'),
    'Symfony\\Component\\HttpFoundation\\' => array($vendorDir . '/symfony/http-foundation'),
    'Symfony\\Component\\Finder\\' => array($vendorDir . '/symfony/finder'),
    'Symfony\\Component\\Filesystem\\' => array($vendorDir . '/symfony/filesystem'),
    'Symfony\\Component\\EventDispatcher\\' => array($vendorDir . '/symfony/event-dispatcher'),
    'Symfony\\Component\\DomCrawler\\' => array($vendorDir . '/symfony/dom-crawler'),
    'Symfony\\Component\\DependencyInjection\\' => array($vendorDir . '/symfony/dependency-injection'),
    'Symfony\\Component\\Debug\\' => array($vendorDir . '/symfony/debug'),
    'Symfony\\Component\\CssSelector\\' => array($vendorDir . '/symfony/css-selector'),
    'Symfony\\Component\\Console\\' => array($vendorDir . '/symfony/console'),
    'Symfony\\Component\\Config\\' => array($vendorDir . '/symfony/config'),
    'Symfony\\Component\\BrowserKit\\' => array($vendorDir . '/symfony/browser-kit'),
    'Symfony\\Bundle\\FrameworkBundle\\' => array($vendorDir . '/symfony/framework-bundle'),
    'Stack' => array($vendorDir . '/stack/builder/src'),
    'Services_Twilio' => array($vendorDir . '/twilio/sdk'),
    'SOE\\' => array($baseDir . '/app'),
    'Psr\\Log\\' => array($vendorDir . '/psr/log'),
    'Predis' => array($vendorDir . '/predis/predis/lib'),
    'Patchwork' => array($vendorDir . '/patchwork/utf8/class'),
    'PHP_' => array($vendorDir . '/pdepend/pdepend/src/main/php'),
    'PHPParser' => array($vendorDir . '/nikic/php-parser/lib'),
    'Normalizer' => array($vendorDir . '/patchwork/utf8/class'),
    'Net' => array($vendorDir . '/phpseclib/phpseclib/phpseclib'),
    'Monolog' => array($vendorDir . '/monolog/monolog/src'),
    'Mockery' => array($vendorDir . '/mockery/mockery/library'),
    'MaxMind' => array($vendorDir . '/maxmind-db/reader/src'),
    'Math' => array($vendorDir . '/phpseclib/phpseclib/phpseclib'),
    'Jeremeamia\\SuperClosure' => array($vendorDir . '/jeremeamia/SuperClosure/src'),
    'Illuminate' => array($vendorDir . '/laravel/framework/src'),
    'Guzzle\\Tests' => array($vendorDir . '/guzzle/guzzle/tests'),
    'Guzzle' => array($vendorDir . '/guzzle/guzzle/src'),
    'GeoIp2' => array($vendorDir . '/geoip2/geoip2/src'),
    'File' => array($vendorDir . '/phpseclib/phpseclib/phpseclib'),
    'Doctrine\\Common\\Lexer\\' => array($vendorDir . '/doctrine/lexer/lib'),
    'Doctrine\\Common\\Annotations\\' => array($vendorDir . '/doctrine/annotations/lib'),
    'Detection' => array($vendorDir . '/mobiledetect/mobiledetectlib/namespaced'),
    'Crypt' => array($vendorDir . '/phpseclib/phpseclib/phpseclib'),
    'ClassPreloader' => array($vendorDir . '/classpreloader/classpreloader/src'),
    'Carbon' => array($vendorDir . '/nesbot/carbon/src'),
    'Boris' => array($vendorDir . '/d11wtq/boris/lib'),
    'Asm89\\Stack' => array($vendorDir . '/asm89/stack-cors/src'),
);
